{"version":3,"sources":["img/sms.svg","img/unsend.svg","App.js","reportWebVitals.js","index.js"],"names":["CustomizedInputs","React","useState","value","setValue","msg","setMsg","error","setError","isMessage","setIsMessage","MaterialUISwitch","styled","Switch","theme","width","height","padding","margin","transform","color","backgroundImage","unsend","opacity","backgroundColor","content","position","left","top","backgroundRepeat","backgroundPosition","backgroundSize","sms","borderRadius","className","class","placeholder","type","onChange","e","onlyNums","target","replace","length","autoFocus","FormControlLabel","control","sx","m","label","checked","onClick","row","Alert","severity","Button","variant","endIcon","window","open","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAAe,MAA0B,gCCA1B,MAA0B,mC,OCY1B,SAASA,IACtB,MAA0BC,IAAMC,WAAhC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsBH,IAAMC,WAA5B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAA0BL,IAAMC,UAAS,GAAzC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAAkCP,IAAMC,UAAS,GAAjD,mBAAOO,EAAP,KAAkBC,EAAlB,KAWMC,EAAmBC,YAAOC,IAAPD,EAAe,cAAGE,MAAH,MAAgB,CACtDC,MAAO,GACPC,OAAQ,GACRC,QAAS,EACT,0BAA2B,CACzBC,OAAQ,EACRD,QAAS,EACTE,UAAW,kBACX,gBAAiB,CACfC,MAAO,OACPD,UAAW,mBACX,4BAA6B,CAC7BE,gBAAgB,OAAD,OAASC,EAAT,MAEf,uBAAwB,CACtBC,QAAS,EACTC,gBAAiB,UAIvB,qBAAsB,CACpBA,gBAAiB,iBACjBT,MAAO,GACPC,OAAQ,GACR,WAAY,CACVS,QAAS,KACTC,SAAU,WACVX,MAAO,OACPC,OAAQ,OACRW,KAAM,EACNC,IAAK,EACLC,iBAAkB,YAClBC,mBAAoB,SACpBC,eAAe,MAEfV,gBAAgB,OAAD,OAASW,EAAT,OAInB,qBAAsB,CACpBT,QAAS,EACTC,gBAAiB,OACjBS,aAAc,QAgBlB,OACE,sBACEC,UAAU,YADZ,UAGE,qBAAKA,UAAU,SACf,qBAAKC,MAAM,OAAX,iDACA,uBAAOC,YAAY,gBAAgBC,KAAK,SAASlC,MAAOA,EAAOmC,SAxE9C,SAACC,GACpB/B,GAAS,GACT,IAAMgC,EAAWD,EAAEE,OAAOtC,MAAMuC,QAAQ,UAAW,IAC/CF,EAASG,QAAU,IACrBvC,EAASoC,IAoE8EN,UAAU,eAAeU,UAAU,SAC1H,cAACC,EAAA,EAAD,CACEC,QAAS,cAACnC,EAAD,CAAkBoC,GAAI,CAAEC,EAAG,KACpCC,MAAM,GACNC,QAASzC,EACT0C,QAAS,kBAAIzC,GAAcD,MAE3BA,EACF,0BAAU2B,YAAY,qBAAqBjC,MAAOE,EAAKiC,SAAU,SAACC,GAAD,OAAKjC,EAAOiC,EAAEE,OAAOtC,QAAQiD,IAAI,IAAKlB,UAAU,cAChH,KAIC3B,EAAO,cAAC8C,EAAA,EAAD,CAAOC,SAAS,QAAhB,uDAA2E,KACpF,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYtB,UAAU,WAAWuB,QAAS,cAAC,IAAD,CAAUvB,UAAU,SAAWiB,QA3BhF,WACRhD,GAAyB,IAAhBA,EAAMwC,OACflC,EAAWiD,OAAOC,KAAP,0BAA+BxD,EAA/B,iBAA6CE,IAAOqD,OAAOC,KAAP,0BAA+BxD,IAE/FK,GAAS,IAuBT,qBCzGN,IAYeoD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8a4be935.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sms.688fc599.svg\";","export default __webpack_public_path__ + \"static/media/unsend.c0675367.svg\";","import React from \"react\";\n// import Box from \"@mui/material/Box\";\nimport './App.css';\nimport Button from '@mui/material/Button';\nimport SendIcon from '@mui/icons-material/Send';\nimport Alert from '@mui/material/Alert';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport { styled } from '@mui/material/styles';\nimport sms from './img/sms.svg';\nimport unsend from './img/unsend.svg'\n// import ContentPasteTwoToneIcon from '@mui/icons-material/ContentPasteTwoTone';\nexport default function CustomizedInputs() {\n  const [value, setValue] = React.useState();\n  const [msg, setMsg] = React.useState();\n  const [error, setError] = React.useState(false);\n  const [isMessage, setIsMessage] = React.useState(false);\n\n\n  const handleChange = (e) => {\n    setError(false);\n    const onlyNums = e.target.value.replace(/[^0-9]/g, \"\");\n    if (onlyNums.length <= 10) {\n      setValue(onlyNums);\n    }\n  };\n\n  const MaterialUISwitch = styled(Switch)(({ theme }) => ({\n    width: 80,\n    height: 44,\n    padding: 8,\n    '& .MuiSwitch-switchBase': {\n      margin: 1,\n      padding: 0,\n      transform: 'translateX(4px)',\n      '&.Mui-checked': {\n        color: '#fff',\n        transform: 'translateX(35px)',\n        '& .MuiSwitch-thumb:before': {\n        backgroundImage: `url(${unsend})`,\n        },\n        '& + .MuiSwitch-track': {\n          opacity: 1,\n          backgroundColor: '#eee',\n        },\n      },\n    },\n    '& .MuiSwitch-thumb': {\n      backgroundColor: 'rgb(13 193 67)',\n      width: 40,\n      height: 40,\n      '&:before': {\n        content: \"''\",\n        position: 'absolute',\n        width: '100%',\n        height: '100%',\n        left: 0,\n        top: 0,\n        backgroundRepeat: 'no-repeat',\n        backgroundPosition: 'center',\n        backgroundSize:\"75%\",\n\n        backgroundImage: `url(${sms})`,\n\n      },\n    },\n    '& .MuiSwitch-track': {\n      opacity: 1,\n      backgroundColor: '#eee',\n      borderRadius: 20 / 2,\n    },\n  }));\n\n  // const paste = () => {\n  //   let a = document.execCommand(0);\n  //   alert(document.execCommand('paste'))\n  //   setValue(a)\n  // }\n  const send = () =>{\n    if(value && value.length == 10){\n      (isMessage)?window.open(`http://wa.me/+91${value}?text=${msg}`):window.open(`http://wa.me/+91${value}`);\n    }else{\n      setError(true);\n    }\n  }\n  return (\n    <div \n      className=\"container\"\n    >\n      <div className=\"logo\"></div>\n      <div class=\"f-10\">Send Message Without Saving Contact</div>\n      <input placeholder=\"Mobile Number\" type=\"number\" value={value} onChange={handleChange} className=\"number-input\" autoFocus=\"true\" />\n      <FormControlLabel\n        control={<MaterialUISwitch sx={{ m: 1 }} />}\n        label=\"\"\n        checked={isMessage}\n        onClick={()=>setIsMessage(!isMessage)}\n      />\n      {(isMessage)?\n      <textarea placeholder=\"Enter Message here\" value={msg} onChange={(e)=>setMsg(e.target.value)} row=\"5\"  className=\"msg-input\"/>\n      :null}\n\n\n      {/* <Button variant=\"contained\" color=\"secondary\" className=\"paste-btn\" endIcon={<ContentPasteTwoToneIcon className=\"f-30\" />} onClick={paste} ></Button> */}\n      {(error)?<Alert severity=\"error\" >It seems mobile number is not suffecient.</Alert>:null}\n      <Button variant=\"contained\" className=\"send-btn\" endIcon={<SendIcon className=\"f-30\" />} onClick={send}>send</Button>\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}